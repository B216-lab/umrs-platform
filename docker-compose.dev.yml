services:
  umrs-api:
    container_name: umrs-api-dev
    image: b216/umrs-backend:dev
    env_file: .env.example
    build:
      context: ./umrs-api
      dockerfile: ./Dockerfile.dev
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - NODE_TLS_REJECT_UNAUTHORIZED=0
    volumes:
      - ./umrs-api:/usr/src/app
    depends_on:
      - keycloak


  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=${KC_BOOTSTRAP_ADMIN_USERNAME}
      - KC_BOOTSTRAP_ADMIN_PASSWORD=${KC_BOOTSTRAP_ADMIN_PASSWORD}
      - KC_HTTPS_CERTIFICATE_FILE=/opt/keycloak/conf/cert.pem
      - KC_HTTPS_CERTIFICATE_KEY_FILE=/opt/keycloak/conf/key.pem
      - KC_HOSTNAME_STRICT=false
    ports:
      - "8443:8443"
    healthcheck:
      test: [ "CMD", "curl", "-f", "https://localhost:8443/realms/master" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s
    command:
      - start-dev
      - --import-realm
      - --https-certificate-file=/opt/keycloak/conf/cert.pem
      - --https-certificate-key-file=/opt/keycloak/conf/key.pem
    volumes:
      - ./data/realm-export.json:/opt/keycloak/data/import/realm-export.json
      - ./certs/cert.pem:/opt/keycloak/conf/cert.pem
      - ./certs/key.pem:/opt/keycloak/conf/key.pem

  pgbouncer:
    container_name: pgbouncer-dev
    image: pgbouncer/pgbouncer:1.15.0
    ports:
      - "${DB_PORT}:5432"
    environment:
      - DATABASES_USER=${DB_USERNAME}
      - DATABASES_PASSWORD=${DB_PASSWORD}
      - DATABASES_DBNAME=${DB_NAME}
      - DATABASES_HOST=${DB_HOST}
      - PGBOUNCER_LISTEN_PORT=${DB_PORT}
    depends_on:
      - database

  database:
    container_name: database-dev
    image: postgis/postgis
    ports:
      - "3005:5432"
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD} # superuser password
      - POSTGRES_USER=${DB_USERNAME} # create the specified user with superuser power and a database with the same name if no POSTGRES_DB is specified
    volumes:
      - db-data:/var/lib/postgresql/data

  umrs-frontend-dev:
    container_name: umrs-frontend-dev
    image: b216/umrs-frontend:dev
    env_file: .env.example
    build:
      context: ./client-umrs
      dockerfile: Dockerfile.dev
    ports:
      - '4200:4200'
    volumes:
      - ./client-umrs:/app

volumes:
  db-data:
